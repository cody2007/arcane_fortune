use crate::disp_lib::endwin;
use crate::config_load::*;
use std::fs::{File};
use std::path::Path;
use std::io::Write;

#[allow(non_snake_case)]
pub struct Localization {
	pub lang_ind: usize,
	
	// the following: indexed by [exemplar_ind][translation_ind]
	pub resource_nms: Vec<Vec<String>>,
	pub unit_nms: Vec<Vec<String>>,
	pub bldg_nms: Vec<Vec<String>>,
	pub tech_nms: Vec<Vec<String>>,
	pub doctrine_nms: Vec<Vec<String>>,
	
	// generated by gen_code.py:
	pub Empty_txt: String, pub Action: String, pub Edition: String, pub Language: String, pub Load_game: String, pub New_game: String, pub New_game_options: String, pub World_size: String, pub arrow_keys: String, pub or: String, pub Use_number_or_arrow_keys_to_select: String, pub Use_arrow_keys_to_select: String, pub approximately: String, pub Recommended: String, pub Experimental: String, pub Enter_key: String, pub Tab_key: String, pub Road: String, pub Wall: String, pub Gate: String, pub damaged: String, pub Resume_construction: String, pub Select_difficulty: String, pub Dedicate_to: String, pub Choose_a_name_for_the_brigade: String, pub Choose_a_name_for_the_sector: String, pub Confirm: String, pub Leave_brigade: String, pub Join_brigade: String, pub Select_resource: String, pub Select_production: String, pub Select_technology: String, pub Move_cursor: String, pub to_select_a_building: String, pub to_change_build_location: String, pub to_cancel_building: String, pub Select_edge_to_continue_construction: String, pub Russia: String, pub Earth: String, pub Number_of_players: String, pub At_which_level_are_your_leadership_skills: String, pub Nomad: String, pub Bourgeoisie: String, pub Mayor: String, pub Governor: String, pub Noble: String, pub Monarch: String, pub Khan_of_Heaven: String, pub to_start_game: String, pub to_begin: String, pub Exit: String, pub Loading_game: String, pub Battalion: String, pub Country: String, pub Bnkrpt: String, pub Gold: String, pub Net: String, pub Bldgs: String, pub Units: String, pub Carrying: String, pub Taxes: String, pub Budget: String, pub Fin_all: String, pub Fin_all_tool_tip: String, pub Next_month: String, pub Next_day: String, pub Nxt_day: String, pub Stop: String, pub day: String, pub days: String, pub mons: String, pub Demographics: String, pub Rsdnts: String, pub Unemp: String, pub Tech: String, pub Economic_bonus: String, pub Doctrine_tree: String, pub Rsrch_turn: String, pub Rsrching: String, pub Fin: String, pub Group_move: String, pub Group_move_tool_tip: String, pub Move_to: String, pub Never: String, pub Age: String, pub No_nobility_in_empire: String, pub House_of: String, pub Cultural_Advisor: String, pub Cultural_Advisor_vlow: String, pub Cultural_Advisor_low: String, pub Cultural_Advisor_neutral: String, pub Cultural_Advisor_high: String, pub Cultural_Advisor_vhigh: String, pub Chief_of_Police: String, pub Chief_of_Police_vlow: String, pub Chief_of_Police_low: String, pub Chief_of_Police_neutral: String, pub Chief_of_Police_high: String, pub Chief_of_Police_vhigh: String, pub Public_Counsel_of_Foreign_Affairs: String, pub Public_Counsel_of_FA_vlow: String, pub Public_Counsel_of_FA_low: String, pub Public_Counsel_of_FA_neutral: String, pub Public_Counsel_of_FA_high: String, pub Public_Counsel_of_FA_vhigh: String, pub Health_Advisor: String, pub Health_Advisor_vlow: String, pub Health_Advisor_low: String, pub Health_Advisor_neutral: String, pub Health_Advisor_high: String, pub Health_Advisor_vhigh: String, pub Economic_Advisor: String, pub Economic_Advisor_vlow: String, pub Economic_Advisor_low: String, pub Economic_Advisor_neutral: String, pub Economic_Advisor_high: String, pub Economic_Advisor_vhigh: String, pub to_zoom_in: String, pub Select_exploration_type: String, pub Random: String, pub Spiral_out: String, pub Move_w_cursor: String, pub Move_w_cursor_tool_tip: String, pub Zone_demands: String, pub Zone: String, pub Local_demand: String, pub Arrow_keys_mv: String, pub Arrow_keys: String, pub Screen: String, pub Cursor: String, pub to_cancel: String, pub to_go_back: String, pub Left_arrow: String, pub What_would_you_like_to_learn_about: String, pub Select_a_rectangular_group_of_units: String, pub Select_a_unit: String, pub Select_a_building: String, pub Select_a_technology: String, pub Select_a_resource: String, pub Symbol: String, pub Press: String, pub to_add_an_action: String, pub Assign_an_action_to: String, pub all_battalions_in_brigade: String, pub all_battalions_in_brigade_tool_tip: String, pub brigade_build_list: String, pub brigade_build_list_tool_tip: String, pub Build_list: String, pub brigade_repair_tool_tip: String, pub view_build_list: String, pub actions: String, pub action: String, pub an_individual_battalion: String, pub Brigade: String, pub Save_auto_freq: String, pub years_0_disables: String, pub Advisor_caution: String, pub Choose_an_action_for_all_brigade_units: String, pub Choose_an_action_to_add_to_the_brigade_build_list: String, pub start_drawing_sector: String, pub sector_drawing: String, pub start_selecting_brigade: String, pub brigade_selection: String, pub finish_drawing_sector: String, pub rectangle_corner: String, pub finish_drawing_group: String, pub finish_selecting_brigade: String, pub group_movement: String, pub Or_select_an_action_and_press: String, pub to_remove: String, pub The_X_Battalion_reports_activity: String, pub Reqs_X_rsrch: String, pub create: String, pub build: String, pub locate_and_use: String, pub Required_technology: String, pub Req_prevailing_doctrine: String, pub Pre_req: String, pub Bldg_pts: String, pub Select_a_noble_house: String, pub Bldg_pts_req: String, pub Research_required: String, pub Research_output_per_day: String, pub Required_resources: String, pub Time_to_discover: String, pub Req_for_creating: String, pub Req_for_building: String, pub Req_for_discovering: String, pub Produced_by: String, pub Movement_speed: String, pub Carrying_capacity: String, pub Health: String, pub Terrain: String, pub All_water: String, pub Shallow_water_only: String, pub Land_and_owned_walls: String, pub Land_only: String, pub Air: String, pub Time_required_to_produce: String, pub Time_required_to_construct: String, pub km_day: String, pub Cost_per_day_to_support: String, pub Cost_per_day: String, pub gold: String, pub note_tile_conversion: String, pub None: String, pub Government_funded: String, pub Civilian_taxable: String, pub Agricultural_bonus: String, pub Residential_bonus: String, pub Industrial_bonus: String, pub Business_bonus: String, pub Can_create: String, pub yrs: String, pub years: String, pub months: String, pub Research_req: String, pub to_exit_menu: String, pub By: String, pub Visit: String, pub Target: String, pub to_close: String, pub expand: String, pub hide: String, pub version: String, pub Founded: String, pub Open_game: String, pub Cancel: String, pub Tab: String, pub Cancel_colon: String, pub and_x_more: String, pub Select_an_item_to_remove: String, pub view_production: String, pub Open: String, pub Save_as: String, pub Save: String, pub Close: String, pub Sector: String, pub Damage: String, pub Sentry: String, pub Patrol: String, pub Build_gate_instructions: String, pub Change_dest: String, pub drag_the_X: String, pub Move_unit: String, pub stop_dragging: String, pub Move_unit_instructions: String, pub Select_battalion: String, pub Select_brigade: String, pub Select_map_sector: String, pub Select_unit_enter_action: String, pub No_map_sectors_found: String, pub Select_city: String, pub Select_civilization: String, pub N_units: String, pub National_motto: String, pub Prevailing_doctrine: String, pub Resources_available: String, pub Go_to_resource: String, pub Attack_strength: String, pub Siege_bonus: String, pub Attack_range: String, pub na: String, pub City_nm: String, pub Zoning_req_to_use: String, pub Req_to_create: String, pub Found_in_most_to_least: String, pub Found_in: String, pub Agricultural: String, pub Residential: String, pub Business: String, pub Industrial: String, pub Production: String, pub Producing: String, pub City_Hall_dist: String, pub Enforced_tax: String, pub Residents: String, pub Employees: String, pub Employed: String, pub Products_sold: String, pub Consumption: String, pub Tax_payments: String, pub No_route: String, pub build_roads: String, pub Not_yet_determined: String, pub No_other_civs_discovered: String, pub The_country_Embassy: String, pub perform_action: String, pub select: String, pub How_do_you_respond: String, pub Threaten: String, pub Declare_war: String, pub You_have_threatened_country: String, pub Name_affinity_responds: String, pub Our_Intel_on_country: String, pub Ruler: String, pub Our_intelligence_tells_us: String, pub Auto_save_the_game_every: String, pub Auto_save_part2: String, pub Propose_treaty: String, pub Go_to_coordinate: String, pub Go: String, pub No_info_to_plot: String, pub Legend: String, pub Next_prev_plot: String, pub Time: String, pub Map_buffer_used: String, pub Defensive_power: String, pub Offensive_power: String, pub Population: String, pub Historic: String, pub Unemployed: String, pub Net_Income: String, pub Research_Output: String, pub Technological_Development: String, pub Happiness: String, pub Moving: String, pub Moving_civilian: String, pub Crime: String, pub Pacifism_Militarism: String, pub Militarism: String, pub Pacifism: String, pub Safety: String, pub Doctrinality: String, pub Methodicalism: String, pub Zone_Demands: String, pub Milliseconds_runtime_per_game_day: String, pub Discovers: String, pub vs_time: String, pub Keys: String, pub Scroll_view: String, pub Change_selection: String, pub Start_researching: String, pub Color_indicators: String, pub selected_tech: String, pub selected: String, pub Doctrinality_Methodicalism: String, pub Your_empires_prevailing_doctrines: String, pub World_prevailing_doctrines: String, pub prevailing_doctrinality: String, pub doctrine_w_presence: String, pub undiscovered_tech: String, pub discovered_tech: String, pub researching: String, pub Req_for: String, pub Reqs: String, pub Also_req: String, pub World_History: String, pub Battle_History: String, pub Ecnomic_History: String, pub No_logs: String, pub Dispositions: String, pub Moods: String, pub Cost: String, pub Dist: String, pub Idle: String, pub Zoning: String, pub Automated: String, pub Fortified: String, pub Fortify: String, pub Fortify_tool_tip: String, pub Pass_turn: String, pub Dedication: String, pub Auto_exploring: String, pub Auto_explore: String, pub Building_road: String, pub Building_gate: String, pub Building_wall: String, pub Repairing_wall: String, pub Building: String, pub Attacking: String, pub Disband: String, pub Disband_tool_tip: String, pub Zone_agricultural: String, pub Zone_business: String, pub Zone_residential: String, pub Zone_industrial: String, pub Automate_worker: String, pub Automate_worker_tool_tip: String, pub Cont_bldg_construction: String, pub Cont_bldg_construction_tool_tip: String, pub no_actions_remain: String, pub Member_of_the_Brigade: String, pub view_brigade: String, pub Press_to_add_action_to_brigade_build_list: String, pub The_Battalion: String, pub Create_bldg: String, pub Build_road_to: String, pub Build_road: String, pub Build_gate: String, pub Build_gate_tool_tip: String, pub Build_gate_no_pre_colon: String, pub Days_required: String, pub est: String, pub Build_wall_to: String, pub Build_wall: String, pub Attacking_instructions: String, pub Burn_building: String, pub Repair_wall_at: String, pub Repair_wall_instructions: String, pub Repair_wall: String, pub Start_selecting: String, pub Confirm_selection: String, pub Select_an_area: String, pub Removing_zones_and_bldgs: String, pub rm_bldgs_and_zones: String, pub Create_brigade_by_drawing_a_rectangle: String, pub Create_sector_by_drawing_a_rectangle: String, pub Zoning_instructions: String, pub Change_location: String, pub move_mouse: String, pub Finish_zoning: String, pub Start_zoning: String, pub click_and_drag: String, pub to_move_unit: String, pub Building_instructions: String, pub Build: String, pub to_stop_moving_unit: String, pub Attack: String, pub Select_group: String, pub Move_corner: String, pub Finish: String, pub to_continue: String, pub Unload_units: String, pub abandoned: String, pub Construction_progress: String, pub S: String, pub N: String, pub E: String, pub W: String, pub SW: String, pub SE: String, pub NW: String, pub NE: String, pub Jan: String, pub Feb: String, pub Mar: String, pub Apr: String, pub May: String, pub Jun: String, pub Jul: String, pub Aug: String, pub Sep: String, pub Oct: String, pub Nov: String, pub Dec: String, pub Max_residents: String, pub Max_consumption: String, pub Max_production: String, pub Ocean: String, pub Shallow_water: String, pub Mountain: String, pub Undiscovered: String, pub Tundra: String, pub Desert: String, pub Pine_forest: String, pub Savanna: String, pub Steppe: String, pub Prarie: String, pub Heath: String, pub Mixed_forest: String, pub Broadleaf_forest: String, pub Tropical_broadleaf: String, pub Wetland: String, pub Meadow: String, pub doctrine_changed_line1: String, pub doctrine_changed_line2: String, pub Generating_elevation_map: String, pub Smoothing_elevation_map: String, pub Generating_arability_map: String, pub Smoothing_arability_map: String, pub Placing_humankind: String, pub Done: String, pub Saving_game: String, pub attempt: String, pub Unmvd_units: String, pub MPD: String, pub DPS: String, pub DPF: String, pub Current_location_blocked: String, pub Militarist: String, pub Interventionist: String, pub Pragmatist: String, pub Peace_minded: String, pub Pacifist: String, pub Devout: String, pub Reverant: String, pub Adherant: String, pub Influenced: String, pub Illiterate: String, pub Literate: String, pub Artisan: String, pub Scholar: String, pub Treasonous: String, pub Rebellious: String, pub Doubtful: String, pub Hopeful: String, pub Content: String, pub Joyful: String, pub Euphoric: String, pub Automate: String, pub Soldier_automate_tool_tip: String, pub change_brigade_repair: String, pub clear_brigade_repair: String, pub The_NM_Brigade: String, pub Repair_damaged_walls: String, pub Assault_desc: String, pub Assault: String, pub Defense_desc: String, pub Defense: String, pub Report_desc: String, pub Report: String, pub Zoom_in: String, pub mouse_wheel: String, pub mouse: String, pub right_click: String, pub keyboard: String, pub Rioting_has_broken_out: String, pub No_actions_remain: String, pub Adopted_doctrine: String, pub Assign_actions_to_them: String, pub You_have_unmoved_units: String, pub Fortify_them_if: String, pub Current_wars: String, pub Civic_Advisors: String, pub Public_Polling: String, pub positive: String, pub negative: String, pub on_average_responses: String, pub When_not_engaged_what_action: String, pub What_are_you_most_satisfied_with: String, pub What_are_you_least_satisfied_with: String, pub doctrines_surrounding: String, pub militarism_surrounding: String, pub pacifism_surrounding: String, pub sickness_surrounding: String, pub unemployment_surrounding: String, pub crime_surrounding: String, pub No_city_halls_found: String, pub Automatic_repair_behavior: String, pub Sentry_desc: String, pub Patrol_desc: String, pub At_what_distance: String, pub Health_bonus: String, pub Crime_bonus: String, pub Pacifism_bonus: String, pub Militarism_bonus: String, pub Happiness_bonus: String, pub Tax_aversion: String, pub In_which_sector_do_you_want_to_automate: String, pub Politics: String, pub Select_a_new_tech: String, pub Technology_tree: String, pub File: String, pub Accounting: String, pub Intel: String, pub View: String, pub Go_menu: String, pub Preferences: String, pub Help: String, pub File_Open: String, pub File_New: String, pub File_Save: String, pub File_Save_As: String, pub File_Exit: String, pub Accounting_Units: String, pub Accounting_Cities: String, pub Accounting_Resources: String, pub Accounting_Available: String, pub Accounting_Discovered: String, pub Intel_Plots: String, pub Intel_Defensive_power: String, pub Intel_Offensive_power: String, pub Intel_Population: String, pub Intel_Unemployed: String, pub Intel_Gold: String, pub Intel_Net_income: String, pub Intel_Research_output: String, pub Intel_Tech_development: String, pub Intel_Zone_demand: String, pub Intel_Happiness: String, pub Intel_Crime: String, pub Intel_Doctrine: String, pub Intel_Citizen_pacifism: String, pub Intel_Health: String, pub Intel_Contact_embassy: String, pub Intel_Civilization_intel: String, pub Intel_Active_wars: String, pub View_Underlays: String, pub View_Arability: String, pub View_Elevation: String, pub View_Water_and_mountains_only: String, pub View_Overlays: String, pub View_Structures: String, pub View_Units: String, pub View_Buildings: String, pub View_Zones: String, pub View_Resources: String, pub View_Zone_demands: String, pub View_Happiness: String, pub View_Crime: String, pub View_Show_unconnected_bldgs: String, pub View_Show_unoccupied_bldgs: String, pub View_Windows: String, pub View_Tech_tree: String, pub View_Doctrine_tree: String, pub View_World_history: String, pub View_Battle_history: String, pub View_Economic_history: String, pub Go_Ctr_on_cursor: String, pub Go_Next_unmoved_unit: String, pub Go_Next_City_Hall: String, pub Go_To_coordinate: String, pub Preferences_Save_auto_frequency: String, pub Preferences_Auto_turn: String, pub Preferences_Auto_turn_increment: String, pub Preferences_Interrupt_auto_turn: String, pub Preferences_Terminal: String, pub Preferences_Avoid_special_chars: String, pub Preferences_Use_only_8_colors: String, pub Preferences_Omnipresence: String, pub Preferences_Show_full_map: String, pub Preferences_Show_all_unit_actions: String, pub Preferences_Discover_all_civs: String, pub Preferences_Place_unit_at_cursor: String, pub Preferences_Switch_to_player: String, pub Preferences_Discover_specific_technology: String, pub Preferences_Discover_all_technology: String, pub Preferences_Obtain_resource: String, pub Preferences_Free_money: String, pub Preferences_Change_game_difficulty: String, pub Preferences_Pause_AI: String, pub Help_Encyclopedia: String, pub Help_Performance: String, pub Help_MPD_vs_time: String, pub Help_About: String, // finished substitution 1
}

const LOCALIZATION_PREF: &str = "config/current_lang_pref.txt";
const LOCALIZATION_CONFIG: &str = "config/localization.txt";

const CURRENT_LANG_KEY: &str = "current_lang";
const LANGUAGES_KEY: &str = "languages";

impl Localization {
	pub fn new() -> Localization {
		let lang_ind: usize = {
			let key_sets = config_parse(read_file(LOCALIZATION_PREF));
			find_req_key_parse(CURRENT_LANG_KEY, &key_sets[0])
		};
		
		let key_sets = config_parse(read_file(LOCALIZATION_CONFIG));
		
		let langs = find_req_key_vec_quoted_string(LANGUAGES_KEY, &key_sets[0]);
		assertq!(lang_ind < langs.len(), "insufficient number of languages found for selection. found: {}, attempted to access index: {}", langs.len(), lang_ind);
		
		/////////////////////////////
		// text fields dependent on unit, bldg, etc config files
		let parse_keys = |entries: &Vec<KeyPair>| {
			let mut vals = Vec::with_capacity(entries.len());
			for entry in entries.iter() {
				let translations = parse_vec_quoted_string(entry.val.clone());
				assertq!(translations.len() == langs.len(), "missing translation for `{}`. expected {} entries. found: {:#?}", entry.key, langs.len(), translations);
				vals.push(translations.clone());
			}
			vals
		};
		
		assertq!(key_sets.len() == 7, "Unknown number of configuration blocks in {}, found {}, expected 6", LOCALIZATION_CONFIG, key_sets.len());
		let resource_nms = parse_keys(&key_sets[2]);
		let unit_nms = parse_keys(&key_sets[3]);
		let bldg_nms = parse_keys(&key_sets[4]);
		let tech_nms = parse_keys(&key_sets[5]);
		let doctrine_nms = parse_keys(&key_sets[6]);
		
		///////////////////////////////
		// generic txts (entries are hard-coded, unlike for the unit, bldg, etc fields)
		let generic_txts = &key_sets[1];
		let generic_txts_vec = vec![(*generic_txts).clone()];
		
		let find_key = |nm| {
			chk_key_unique(nm, &generic_txts_vec);
			let translations = find_req_key_vec_quoted_string(nm, generic_txts);
			assertq!(translations.len() == langs.len(), "missing translation for `{}`. expected {} entries. found: {:#?}", nm, langs.len(), translations);
			translations[lang_ind].clone()
		};
		
		Self {
			lang_ind, resource_nms, unit_nms, bldg_nms, tech_nms, doctrine_nms,
			// generated by gen_code.py:
			Empty_txt: find_key("Empty_txt"), Action: find_key("Action"), Edition: find_key("Edition"), Language: find_key("Language"), Load_game: find_key("Load_game"), New_game: find_key("New_game"), New_game_options: find_key("New_game_options"), World_size: find_key("World_size"), arrow_keys: find_key("arrow_keys"), or: find_key("or"), Use_number_or_arrow_keys_to_select: find_key("Use_number_or_arrow_keys_to_select"), Use_arrow_keys_to_select: find_key("Use_arrow_keys_to_select"), approximately: find_key("approximately"), Recommended: find_key("Recommended"), Experimental: find_key("Experimental"), Enter_key: find_key("Enter_key"), Tab_key: find_key("Tab_key"), Road: find_key("Road"), Wall: find_key("Wall"), Gate: find_key("Gate"), damaged: find_key("damaged"), Resume_construction: find_key("Resume_construction"), Select_difficulty: find_key("Select_difficulty"), Dedicate_to: find_key("Dedicate_to"), Choose_a_name_for_the_brigade: find_key("Choose_a_name_for_the_brigade"), Choose_a_name_for_the_sector: find_key("Choose_a_name_for_the_sector"), Confirm: find_key("Confirm"), Leave_brigade: find_key("Leave_brigade"), Join_brigade: find_key("Join_brigade"), Select_resource: find_key("Select_resource"), Select_production: find_key("Select_production"), Select_technology: find_key("Select_technology"), Move_cursor: find_key("Move_cursor"), to_select_a_building: find_key("to_select_a_building"), to_change_build_location: find_key("to_change_build_location"), to_cancel_building: find_key("to_cancel_building"), Select_edge_to_continue_construction: find_key("Select_edge_to_continue_construction"), Russia: find_key("Russia"), Earth: find_key("Earth"), Number_of_players: find_key("Number_of_players"), At_which_level_are_your_leadership_skills: find_key("At_which_level_are_your_leadership_skills"), Nomad: find_key("Nomad"), Bourgeoisie: find_key("Bourgeoisie"), Mayor: find_key("Mayor"), Governor: find_key("Governor"), Noble: find_key("Noble"), Monarch: find_key("Monarch"), Khan_of_Heaven: find_key("Khan_of_Heaven"), to_start_game: find_key("to_start_game"), to_begin: find_key("to_begin"), Exit: find_key("Exit"), Loading_game: find_key("Loading_game"), Battalion: find_key("Battalion"), Country: find_key("Country"), Bnkrpt: find_key("Bnkrpt"), Gold: find_key("Gold"), Net: find_key("Net"), Bldgs: find_key("Bldgs"), Units: find_key("Units"), Carrying: find_key("Carrying"), Taxes: find_key("Taxes"), Budget: find_key("Budget"), Fin_all: find_key("Fin_all"), Fin_all_tool_tip: find_key("Fin_all_tool_tip"), Next_month: find_key("Next_month"), Next_day: find_key("Next_day"), Nxt_day: find_key("Nxt_day"), Stop: find_key("Stop"), day: find_key("day"), days: find_key("days"), mons: find_key("mons"), Demographics: find_key("Demographics"), Rsdnts: find_key("Rsdnts"), Unemp: find_key("Unemp"), Tech: find_key("Tech"), Economic_bonus: find_key("Economic_bonus"), Doctrine_tree: find_key("Doctrine_tree"), Rsrch_turn: find_key("Rsrch_turn"), Rsrching: find_key("Rsrching"), Fin: find_key("Fin"), Group_move: find_key("Group_move"), Group_move_tool_tip: find_key("Group_move_tool_tip"), Move_to: find_key("Move_to"), Never: find_key("Never"), Age: find_key("Age"), No_nobility_in_empire: find_key("No_nobility_in_empire"), House_of: find_key("House_of"), Cultural_Advisor: find_key("Cultural_Advisor"), Cultural_Advisor_vlow: find_key("Cultural_Advisor_vlow"), Cultural_Advisor_low: find_key("Cultural_Advisor_low"), Cultural_Advisor_neutral: find_key("Cultural_Advisor_neutral"), Cultural_Advisor_high: find_key("Cultural_Advisor_high"), Cultural_Advisor_vhigh: find_key("Cultural_Advisor_vhigh"), Chief_of_Police: find_key("Chief_of_Police"), Chief_of_Police_vlow: find_key("Chief_of_Police_vlow"), Chief_of_Police_low: find_key("Chief_of_Police_low"), Chief_of_Police_neutral: find_key("Chief_of_Police_neutral"), Chief_of_Police_high: find_key("Chief_of_Police_high"), Chief_of_Police_vhigh: find_key("Chief_of_Police_vhigh"), Public_Counsel_of_Foreign_Affairs: find_key("Public_Counsel_of_Foreign_Affairs"), Public_Counsel_of_FA_vlow: find_key("Public_Counsel_of_FA_vlow"), Public_Counsel_of_FA_low: find_key("Public_Counsel_of_FA_low"), Public_Counsel_of_FA_neutral: find_key("Public_Counsel_of_FA_neutral"), Public_Counsel_of_FA_high: find_key("Public_Counsel_of_FA_high"), Public_Counsel_of_FA_vhigh: find_key("Public_Counsel_of_FA_vhigh"), Health_Advisor: find_key("Health_Advisor"), Health_Advisor_vlow: find_key("Health_Advisor_vlow"), Health_Advisor_low: find_key("Health_Advisor_low"), Health_Advisor_neutral: find_key("Health_Advisor_neutral"), Health_Advisor_high: find_key("Health_Advisor_high"), Health_Advisor_vhigh: find_key("Health_Advisor_vhigh"), Economic_Advisor: find_key("Economic_Advisor"), Economic_Advisor_vlow: find_key("Economic_Advisor_vlow"), Economic_Advisor_low: find_key("Economic_Advisor_low"), Economic_Advisor_neutral: find_key("Economic_Advisor_neutral"), Economic_Advisor_high: find_key("Economic_Advisor_high"), Economic_Advisor_vhigh: find_key("Economic_Advisor_vhigh"), to_zoom_in: find_key("to_zoom_in"), Select_exploration_type: find_key("Select_exploration_type"), Random: find_key("Random"), Spiral_out: find_key("Spiral_out"), Move_w_cursor: find_key("Move_w_cursor"), Move_w_cursor_tool_tip: find_key("Move_w_cursor_tool_tip"), Zone_demands: find_key("Zone_demands"), Zone: find_key("Zone"), Local_demand: find_key("Local_demand"), Arrow_keys_mv: find_key("Arrow_keys_mv"), Arrow_keys: find_key("Arrow_keys"), Screen: find_key("Screen"), Cursor: find_key("Cursor"), to_cancel: find_key("to_cancel"), to_go_back: find_key("to_go_back"), Left_arrow: find_key("Left_arrow"), What_would_you_like_to_learn_about: find_key("What_would_you_like_to_learn_about"), Select_a_rectangular_group_of_units: find_key("Select_a_rectangular_group_of_units"), Select_a_unit: find_key("Select_a_unit"), Select_a_building: find_key("Select_a_building"), Select_a_technology: find_key("Select_a_technology"), Select_a_resource: find_key("Select_a_resource"), Symbol: find_key("Symbol"), Press: find_key("Press"), to_add_an_action: find_key("to_add_an_action"), Assign_an_action_to: find_key("Assign_an_action_to"), all_battalions_in_brigade: find_key("all_battalions_in_brigade"), all_battalions_in_brigade_tool_tip: find_key("all_battalions_in_brigade_tool_tip"), brigade_build_list: find_key("brigade_build_list"), brigade_build_list_tool_tip: find_key("brigade_build_list_tool_tip"), Build_list: find_key("Build_list"), brigade_repair_tool_tip: find_key("brigade_repair_tool_tip"), view_build_list: find_key("view_build_list"), actions: find_key("actions"), action: find_key("action"), an_individual_battalion: find_key("an_individual_battalion"), Brigade: find_key("Brigade"), Save_auto_freq: find_key("Save_auto_freq"), years_0_disables: find_key("years_0_disables"), Advisor_caution: find_key("Advisor_caution"), Choose_an_action_for_all_brigade_units: find_key("Choose_an_action_for_all_brigade_units"), Choose_an_action_to_add_to_the_brigade_build_list: find_key("Choose_an_action_to_add_to_the_brigade_build_list"), start_drawing_sector: find_key("start_drawing_sector"), sector_drawing: find_key("sector_drawing"), start_selecting_brigade: find_key("start_selecting_brigade"), brigade_selection: find_key("brigade_selection"), finish_drawing_sector: find_key("finish_drawing_sector"), rectangle_corner: find_key("rectangle_corner"), finish_drawing_group: find_key("finish_drawing_group"), finish_selecting_brigade: find_key("finish_selecting_brigade"), group_movement: find_key("group_movement"), Or_select_an_action_and_press: find_key("Or_select_an_action_and_press"), to_remove: find_key("to_remove"), The_X_Battalion_reports_activity: find_key("The_X_Battalion_reports_activity"), Reqs_X_rsrch: find_key("Reqs_X_rsrch"), create: find_key("create"), build: find_key("build"), locate_and_use: find_key("locate_and_use"), Required_technology: find_key("Required_technology"), Req_prevailing_doctrine: find_key("Req_prevailing_doctrine"), Pre_req: find_key("Pre_req"), Bldg_pts: find_key("Bldg_pts"), Select_a_noble_house: find_key("Select_a_noble_house"), Bldg_pts_req: find_key("Bldg_pts_req"), Research_required: find_key("Research_required"), Research_output_per_day: find_key("Research_output_per_day"), Required_resources: find_key("Required_resources"), Time_to_discover: find_key("Time_to_discover"), Req_for_creating: find_key("Req_for_creating"), Req_for_building: find_key("Req_for_building"), Req_for_discovering: find_key("Req_for_discovering"), Produced_by: find_key("Produced_by"), Movement_speed: find_key("Movement_speed"), Carrying_capacity: find_key("Carrying_capacity"), Health: find_key("Health"), Terrain: find_key("Terrain"), All_water: find_key("All_water"), Shallow_water_only: find_key("Shallow_water_only"), Land_and_owned_walls: find_key("Land_and_owned_walls"), Land_only: find_key("Land_only"), Air: find_key("Air"), Time_required_to_produce: find_key("Time_required_to_produce"), Time_required_to_construct: find_key("Time_required_to_construct"), km_day: find_key("km_day"), Cost_per_day_to_support: find_key("Cost_per_day_to_support"), Cost_per_day: find_key("Cost_per_day"), gold: find_key("gold"), note_tile_conversion: find_key("note_tile_conversion"), None: find_key("None"), Government_funded: find_key("Government_funded"), Civilian_taxable: find_key("Civilian_taxable"), Agricultural_bonus: find_key("Agricultural_bonus"), Residential_bonus: find_key("Residential_bonus"), Industrial_bonus: find_key("Industrial_bonus"), Business_bonus: find_key("Business_bonus"), Can_create: find_key("Can_create"), yrs: find_key("yrs"), years: find_key("years"), months: find_key("months"), Research_req: find_key("Research_req"), to_exit_menu: find_key("to_exit_menu"), By: find_key("By"), Visit: find_key("Visit"), Target: find_key("Target"), to_close: find_key("to_close"), expand: find_key("expand"), hide: find_key("hide"), version: find_key("version"), Founded: find_key("Founded"), Open_game: find_key("Open_game"), Cancel: find_key("Cancel"), Tab: find_key("Tab"), Cancel_colon: find_key("Cancel_colon"), and_x_more: find_key("and_x_more"), Select_an_item_to_remove: find_key("Select_an_item_to_remove"), view_production: find_key("view_production"), Open: find_key("Open"), Save_as: find_key("Save_as"), Save: find_key("Save"), Close: find_key("Close"), Sector: find_key("Sector"), Damage: find_key("Damage"), Sentry: find_key("Sentry"), Patrol: find_key("Patrol"), Build_gate_instructions: find_key("Build_gate_instructions"), Change_dest: find_key("Change_dest"), drag_the_X: find_key("drag_the_X"), Move_unit: find_key("Move_unit"), stop_dragging: find_key("stop_dragging"), Move_unit_instructions: find_key("Move_unit_instructions"), Select_battalion: find_key("Select_battalion"), Select_brigade: find_key("Select_brigade"), Select_map_sector: find_key("Select_map_sector"), Select_unit_enter_action: find_key("Select_unit_enter_action"), No_map_sectors_found: find_key("No_map_sectors_found"), Select_city: find_key("Select_city"), Select_civilization: find_key("Select_civilization"), N_units: find_key("N_units"), National_motto: find_key("National_motto"), Prevailing_doctrine: find_key("Prevailing_doctrine"), Resources_available: find_key("Resources_available"), Go_to_resource: find_key("Go_to_resource"), Attack_strength: find_key("Attack_strength"), Siege_bonus: find_key("Siege_bonus"), Attack_range: find_key("Attack_range"), na: find_key("na"), City_nm: find_key("City_nm"), Zoning_req_to_use: find_key("Zoning_req_to_use"), Req_to_create: find_key("Req_to_create"), Found_in_most_to_least: find_key("Found_in_most_to_least"), Found_in: find_key("Found_in"), Agricultural: find_key("Agricultural"), Residential: find_key("Residential"), Business: find_key("Business"), Industrial: find_key("Industrial"), Production: find_key("Production"), Producing: find_key("Producing"), City_Hall_dist: find_key("City_Hall_dist"), Enforced_tax: find_key("Enforced_tax"), Residents: find_key("Residents"), Employees: find_key("Employees"), Employed: find_key("Employed"), Products_sold: find_key("Products_sold"), Consumption: find_key("Consumption"), Tax_payments: find_key("Tax_payments"), No_route: find_key("No_route"), build_roads: find_key("build_roads"), Not_yet_determined: find_key("Not_yet_determined"), No_other_civs_discovered: find_key("No_other_civs_discovered"), The_country_Embassy: find_key("The_country_Embassy"), perform_action: find_key("perform_action"), select: find_key("select"), How_do_you_respond: find_key("How_do_you_respond"), Threaten: find_key("Threaten"), Declare_war: find_key("Declare_war"), You_have_threatened_country: find_key("You_have_threatened_country"), Name_affinity_responds: find_key("Name_affinity_responds"), Our_Intel_on_country: find_key("Our_Intel_on_country"), Ruler: find_key("Ruler"), Our_intelligence_tells_us: find_key("Our_intelligence_tells_us"), Auto_save_the_game_every: find_key("Auto_save_the_game_every"), Auto_save_part2: find_key("Auto_save_part2"), Propose_treaty: find_key("Propose_treaty"), Go_to_coordinate: find_key("Go_to_coordinate"), Go: find_key("Go"), No_info_to_plot: find_key("No_info_to_plot"), Legend: find_key("Legend"), Next_prev_plot: find_key("Next_prev_plot"), Time: find_key("Time"), Map_buffer_used: find_key("Map_buffer_used"), Defensive_power: find_key("Defensive_power"), Offensive_power: find_key("Offensive_power"), Population: find_key("Population"), Historic: find_key("Historic"), Unemployed: find_key("Unemployed"), Net_Income: find_key("Net_Income"), Research_Output: find_key("Research_Output"), Technological_Development: find_key("Technological_Development"), Happiness: find_key("Happiness"), Moving: find_key("Moving"), Moving_civilian: find_key("Moving_civilian"), Crime: find_key("Crime"), Pacifism_Militarism: find_key("Pacifism_Militarism"), Militarism: find_key("Militarism"), Pacifism: find_key("Pacifism"), Safety: find_key("Safety"), Doctrinality: find_key("Doctrinality"), Methodicalism: find_key("Methodicalism"), Zone_Demands: find_key("Zone_Demands"), Milliseconds_runtime_per_game_day: find_key("Milliseconds_runtime_per_game_day"), Discovers: find_key("Discovers"), vs_time: find_key("vs_time"), Keys: find_key("Keys"), Scroll_view: find_key("Scroll_view"), Change_selection: find_key("Change_selection"), Start_researching: find_key("Start_researching"), Color_indicators: find_key("Color_indicators"), selected_tech: find_key("selected_tech"), selected: find_key("selected"), Doctrinality_Methodicalism: find_key("Doctrinality_Methodicalism"), Your_empires_prevailing_doctrines: find_key("Your_empires_prevailing_doctrines"), World_prevailing_doctrines: find_key("World_prevailing_doctrines"), prevailing_doctrinality: find_key("prevailing_doctrinality"), doctrine_w_presence: find_key("doctrine_w_presence"), undiscovered_tech: find_key("undiscovered_tech"), discovered_tech: find_key("discovered_tech"), researching: find_key("researching"), Req_for: find_key("Req_for"), Reqs: find_key("Reqs"), Also_req: find_key("Also_req"), World_History: find_key("World_History"), Battle_History: find_key("Battle_History"), Ecnomic_History: find_key("Ecnomic_History"), No_logs: find_key("No_logs"), Dispositions: find_key("Dispositions"), Moods: find_key("Moods"), Cost: find_key("Cost"), Dist: find_key("Dist"), Idle: find_key("Idle"), Zoning: find_key("Zoning"), Automated: find_key("Automated"), Fortified: find_key("Fortified"), Fortify: find_key("Fortify"), Fortify_tool_tip: find_key("Fortify_tool_tip"), Pass_turn: find_key("Pass_turn"), Dedication: find_key("Dedication"), Auto_exploring: find_key("Auto_exploring"), Auto_explore: find_key("Auto_explore"), Building_road: find_key("Building_road"), Building_gate: find_key("Building_gate"), Building_wall: find_key("Building_wall"), Repairing_wall: find_key("Repairing_wall"), Building: find_key("Building"), Attacking: find_key("Attacking"), Disband: find_key("Disband"), Disband_tool_tip: find_key("Disband_tool_tip"), Zone_agricultural: find_key("Zone_agricultural"), Zone_business: find_key("Zone_business"), Zone_residential: find_key("Zone_residential"), Zone_industrial: find_key("Zone_industrial"), Automate_worker: find_key("Automate_worker"), Automate_worker_tool_tip: find_key("Automate_worker_tool_tip"), Cont_bldg_construction: find_key("Cont_bldg_construction"), Cont_bldg_construction_tool_tip: find_key("Cont_bldg_construction_tool_tip"), no_actions_remain: find_key("no_actions_remain"), Member_of_the_Brigade: find_key("Member_of_the_Brigade"), view_brigade: find_key("view_brigade"), Press_to_add_action_to_brigade_build_list: find_key("Press_to_add_action_to_brigade_build_list"), The_Battalion: find_key("The_Battalion"), Create_bldg: find_key("Create_bldg"), Build_road_to: find_key("Build_road_to"), Build_road: find_key("Build_road"), Build_gate: find_key("Build_gate"), Build_gate_tool_tip: find_key("Build_gate_tool_tip"), Build_gate_no_pre_colon: find_key("Build_gate_no_pre_colon"), Days_required: find_key("Days_required"), est: find_key("est"), Build_wall_to: find_key("Build_wall_to"), Build_wall: find_key("Build_wall"), Attacking_instructions: find_key("Attacking_instructions"), Burn_building: find_key("Burn_building"), Repair_wall_at: find_key("Repair_wall_at"), Repair_wall_instructions: find_key("Repair_wall_instructions"), Repair_wall: find_key("Repair_wall"), Start_selecting: find_key("Start_selecting"), Confirm_selection: find_key("Confirm_selection"), Select_an_area: find_key("Select_an_area"), Removing_zones_and_bldgs: find_key("Removing_zones_and_bldgs"), rm_bldgs_and_zones: find_key("rm_bldgs_and_zones"), Create_brigade_by_drawing_a_rectangle: find_key("Create_brigade_by_drawing_a_rectangle"), Create_sector_by_drawing_a_rectangle: find_key("Create_sector_by_drawing_a_rectangle"), Zoning_instructions: find_key("Zoning_instructions"), Change_location: find_key("Change_location"), move_mouse: find_key("move_mouse"), Finish_zoning: find_key("Finish_zoning"), Start_zoning: find_key("Start_zoning"), click_and_drag: find_key("click_and_drag"), to_move_unit: find_key("to_move_unit"), Building_instructions: find_key("Building_instructions"), Build: find_key("Build"), to_stop_moving_unit: find_key("to_stop_moving_unit"), Attack: find_key("Attack"), Select_group: find_key("Select_group"), Move_corner: find_key("Move_corner"), Finish: find_key("Finish"), to_continue: find_key("to_continue"), Unload_units: find_key("Unload_units"), abandoned: find_key("abandoned"), Construction_progress: find_key("Construction_progress"), S: find_key("S"), N: find_key("N"), E: find_key("E"), W: find_key("W"), SW: find_key("SW"), SE: find_key("SE"), NW: find_key("NW"), NE: find_key("NE"), Jan: find_key("Jan"), Feb: find_key("Feb"), Mar: find_key("Mar"), Apr: find_key("Apr"), May: find_key("May"), Jun: find_key("Jun"), Jul: find_key("Jul"), Aug: find_key("Aug"), Sep: find_key("Sep"), Oct: find_key("Oct"), Nov: find_key("Nov"), Dec: find_key("Dec"), Max_residents: find_key("Max_residents"), Max_consumption: find_key("Max_consumption"), Max_production: find_key("Max_production"), Ocean: find_key("Ocean"), Shallow_water: find_key("Shallow_water"), Mountain: find_key("Mountain"), Undiscovered: find_key("Undiscovered"), Tundra: find_key("Tundra"), Desert: find_key("Desert"), Pine_forest: find_key("Pine_forest"), Savanna: find_key("Savanna"), Steppe: find_key("Steppe"), Prarie: find_key("Prarie"), Heath: find_key("Heath"), Mixed_forest: find_key("Mixed_forest"), Broadleaf_forest: find_key("Broadleaf_forest"), Tropical_broadleaf: find_key("Tropical_broadleaf"), Wetland: find_key("Wetland"), Meadow: find_key("Meadow"), doctrine_changed_line1: find_key("doctrine_changed_line1"), doctrine_changed_line2: find_key("doctrine_changed_line2"), Generating_elevation_map: find_key("Generating_elevation_map"), Smoothing_elevation_map: find_key("Smoothing_elevation_map"), Generating_arability_map: find_key("Generating_arability_map"), Smoothing_arability_map: find_key("Smoothing_arability_map"), Placing_humankind: find_key("Placing_humankind"), Done: find_key("Done"), Saving_game: find_key("Saving_game"), attempt: find_key("attempt"), Unmvd_units: find_key("Unmvd_units"), MPD: find_key("MPD"), DPS: find_key("DPS"), DPF: find_key("DPF"), Current_location_blocked: find_key("Current_location_blocked"), Militarist: find_key("Militarist"), Interventionist: find_key("Interventionist"), Pragmatist: find_key("Pragmatist"), Peace_minded: find_key("Peace_minded"), Pacifist: find_key("Pacifist"), Devout: find_key("Devout"), Reverant: find_key("Reverant"), Adherant: find_key("Adherant"), Influenced: find_key("Influenced"), Illiterate: find_key("Illiterate"), Literate: find_key("Literate"), Artisan: find_key("Artisan"), Scholar: find_key("Scholar"), Treasonous: find_key("Treasonous"), Rebellious: find_key("Rebellious"), Doubtful: find_key("Doubtful"), Hopeful: find_key("Hopeful"), Content: find_key("Content"), Joyful: find_key("Joyful"), Euphoric: find_key("Euphoric"), Automate: find_key("Automate"), Soldier_automate_tool_tip: find_key("Soldier_automate_tool_tip"), change_brigade_repair: find_key("change_brigade_repair"), clear_brigade_repair: find_key("clear_brigade_repair"), The_NM_Brigade: find_key("The_NM_Brigade"), Repair_damaged_walls: find_key("Repair_damaged_walls"), Assault_desc: find_key("Assault_desc"), Assault: find_key("Assault"), Defense_desc: find_key("Defense_desc"), Defense: find_key("Defense"), Report_desc: find_key("Report_desc"), Report: find_key("Report"), Zoom_in: find_key("Zoom_in"), mouse_wheel: find_key("mouse_wheel"), mouse: find_key("mouse"), right_click: find_key("right_click"), keyboard: find_key("keyboard"), Rioting_has_broken_out: find_key("Rioting_has_broken_out"), No_actions_remain: find_key("No_actions_remain"), Adopted_doctrine: find_key("Adopted_doctrine"), Assign_actions_to_them: find_key("Assign_actions_to_them"), You_have_unmoved_units: find_key("You_have_unmoved_units"), Fortify_them_if: find_key("Fortify_them_if"), Current_wars: find_key("Current_wars"), Civic_Advisors: find_key("Civic_Advisors"), Public_Polling: find_key("Public_Polling"), positive: find_key("positive"), negative: find_key("negative"), on_average_responses: find_key("on_average_responses"), When_not_engaged_what_action: find_key("When_not_engaged_what_action"), What_are_you_most_satisfied_with: find_key("What_are_you_most_satisfied_with"), What_are_you_least_satisfied_with: find_key("What_are_you_least_satisfied_with"), doctrines_surrounding: find_key("doctrines_surrounding"), militarism_surrounding: find_key("militarism_surrounding"), pacifism_surrounding: find_key("pacifism_surrounding"), sickness_surrounding: find_key("sickness_surrounding"), unemployment_surrounding: find_key("unemployment_surrounding"), crime_surrounding: find_key("crime_surrounding"), No_city_halls_found: find_key("No_city_halls_found"), Automatic_repair_behavior: find_key("Automatic_repair_behavior"), Sentry_desc: find_key("Sentry_desc"), Patrol_desc: find_key("Patrol_desc"), At_what_distance: find_key("At_what_distance"), Health_bonus: find_key("Health_bonus"), Crime_bonus: find_key("Crime_bonus"), Pacifism_bonus: find_key("Pacifism_bonus"), Militarism_bonus: find_key("Militarism_bonus"), Happiness_bonus: find_key("Happiness_bonus"), Tax_aversion: find_key("Tax_aversion"), In_which_sector_do_you_want_to_automate: find_key("In_which_sector_do_you_want_to_automate"), Politics: find_key("Politics"), Select_a_new_tech: find_key("Select_a_new_tech"), Technology_tree: find_key("Technology_tree"), File: find_key("File"), Accounting: find_key("Accounting"), Intel: find_key("Intel"), View: find_key("View"), Go_menu: find_key("Go_menu"), Preferences: find_key("Preferences"), Help: find_key("Help"), File_Open: find_key("File_Open"), File_New: find_key("File_New"), File_Save: find_key("File_Save"), File_Save_As: find_key("File_Save_As"), File_Exit: find_key("File_Exit"), Accounting_Units: find_key("Accounting_Units"), Accounting_Cities: find_key("Accounting_Cities"), Accounting_Resources: find_key("Accounting_Resources"), Accounting_Available: find_key("Accounting_Available"), Accounting_Discovered: find_key("Accounting_Discovered"), Intel_Plots: find_key("Intel_Plots"), Intel_Defensive_power: find_key("Intel_Defensive_power"), Intel_Offensive_power: find_key("Intel_Offensive_power"), Intel_Population: find_key("Intel_Population"), Intel_Unemployed: find_key("Intel_Unemployed"), Intel_Gold: find_key("Intel_Gold"), Intel_Net_income: find_key("Intel_Net_income"), Intel_Research_output: find_key("Intel_Research_output"), Intel_Tech_development: find_key("Intel_Tech_development"), Intel_Zone_demand: find_key("Intel_Zone_demand"), Intel_Happiness: find_key("Intel_Happiness"), Intel_Crime: find_key("Intel_Crime"), Intel_Doctrine: find_key("Intel_Doctrine"), Intel_Citizen_pacifism: find_key("Intel_Citizen_pacifism"), Intel_Health: find_key("Intel_Health"), Intel_Contact_embassy: find_key("Intel_Contact_embassy"), Intel_Civilization_intel: find_key("Intel_Civilization_intel"), Intel_Active_wars: find_key("Intel_Active_wars"), View_Underlays: find_key("View_Underlays"), View_Arability: find_key("View_Arability"), View_Elevation: find_key("View_Elevation"), View_Water_and_mountains_only: find_key("View_Water_and_mountains_only"), View_Overlays: find_key("View_Overlays"), View_Structures: find_key("View_Structures"), View_Units: find_key("View_Units"), View_Buildings: find_key("View_Buildings"), View_Zones: find_key("View_Zones"), View_Resources: find_key("View_Resources"), View_Zone_demands: find_key("View_Zone_demands"), View_Happiness: find_key("View_Happiness"), View_Crime: find_key("View_Crime"), View_Show_unconnected_bldgs: find_key("View_Show_unconnected_bldgs"), View_Show_unoccupied_bldgs: find_key("View_Show_unoccupied_bldgs"), View_Windows: find_key("View_Windows"), View_Tech_tree: find_key("View_Tech_tree"), View_Doctrine_tree: find_key("View_Doctrine_tree"), View_World_history: find_key("View_World_history"), View_Battle_history: find_key("View_Battle_history"), View_Economic_history: find_key("View_Economic_history"), Go_Ctr_on_cursor: find_key("Go_Ctr_on_cursor"), Go_Next_unmoved_unit: find_key("Go_Next_unmoved_unit"), Go_Next_City_Hall: find_key("Go_Next_City_Hall"), Go_To_coordinate: find_key("Go_To_coordinate"), Preferences_Save_auto_frequency: find_key("Preferences_Save_auto_frequency"), Preferences_Auto_turn: find_key("Preferences_Auto_turn"), Preferences_Auto_turn_increment: find_key("Preferences_Auto_turn_increment"), Preferences_Interrupt_auto_turn: find_key("Preferences_Interrupt_auto_turn"), Preferences_Terminal: find_key("Preferences_Terminal"), Preferences_Avoid_special_chars: find_key("Preferences_Avoid_special_chars"), Preferences_Use_only_8_colors: find_key("Preferences_Use_only_8_colors"), Preferences_Omnipresence: find_key("Preferences_Omnipresence"), Preferences_Show_full_map: find_key("Preferences_Show_full_map"), Preferences_Show_all_unit_actions: find_key("Preferences_Show_all_unit_actions"), Preferences_Discover_all_civs: find_key("Preferences_Discover_all_civs"), Preferences_Place_unit_at_cursor: find_key("Preferences_Place_unit_at_cursor"), Preferences_Switch_to_player: find_key("Preferences_Switch_to_player"), Preferences_Discover_specific_technology: find_key("Preferences_Discover_specific_technology"), Preferences_Discover_all_technology: find_key("Preferences_Discover_all_technology"), Preferences_Obtain_resource: find_key("Preferences_Obtain_resource"), Preferences_Free_money: find_key("Preferences_Free_money"), Preferences_Change_game_difficulty: find_key("Preferences_Change_game_difficulty"), Preferences_Pause_AI: find_key("Preferences_Pause_AI"), Help_Encyclopedia: find_key("Help_Encyclopedia"), Help_Performance: find_key("Help_Performance"), Help_MPD_vs_time: find_key("Help_MPD_vs_time"), Help_About: find_key("Help_About"), // finished substitution 2
		}
	}
	
	pub fn supported() -> Vec<String> {
		let key_sets = config_parse(read_file(LOCALIZATION_CONFIG));
		
		find_req_key_vec_quoted_string(LANGUAGES_KEY, &key_sets[0])
	}
	
	pub fn set(&mut self, lang_ind: usize) {
		let key_sets = config_parse(read_file(LOCALIZATION_CONFIG));
		let langs = find_req_key_vec_quoted_string(LANGUAGES_KEY, &key_sets[0]);
		
		assertq!(lang_ind < langs.len(), "Attempted to change to unsupported language (index: {}, n_supported_languages: {})", lang_ind, langs.len());
		let config_txt = format!("{{\r\n\t{}: {}\r\n}}\r\n", CURRENT_LANG_KEY, lang_ind);
		
		if let Result::Ok(ref mut file) = File::create(Path::new(LOCALIZATION_PREF).as_os_str()) {
			file.write_all(&config_txt.into_bytes())
				.expect(&format!("saving language preferences failed. attempted to write to: {}", LOCALIZATION_PREF))
		}else {panicq!("failed opening language preferences file for writing: {}", LOCALIZATION_PREF);}
		
		*self = Self::new();
	}
}

